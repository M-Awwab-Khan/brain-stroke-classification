{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"raw","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19"}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\ndf = pd.read_csv('/kaggle/input/brain-stroke-dataset/brain_stroke.csv')","metadata":{"execution":{"iopub.status.busy":"2024-08-17T08:09:17.693419Z","iopub.execute_input":"2024-08-17T08:09:17.693921Z","iopub.status.idle":"2024-08-17T08:09:18.154348Z","shell.execute_reply.started":"2024-08-17T08:09:17.693883Z","shell.execute_reply":"2024-08-17T08:09:18.152725Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"/kaggle/input/brain-stroke-dataset/brain_stroke.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-17T08:09:25.055844Z","iopub.execute_input":"2024-08-17T08:09:25.056289Z","iopub.status.idle":"2024-08-17T08:09:25.086939Z","shell.execute_reply.started":"2024-08-17T08:09:25.056249Z","shell.execute_reply":"2024-08-17T08:09:25.085198Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"   gender   age  hypertension  heart_disease ever_married      work_type  \\\n0    Male  67.0             0              1          Yes        Private   \n1    Male  80.0             0              1          Yes        Private   \n2  Female  49.0             0              0          Yes        Private   \n3  Female  79.0             1              0          Yes  Self-employed   \n4    Male  81.0             0              0          Yes        Private   \n\n  Residence_type  avg_glucose_level   bmi   smoking_status  stroke  \n0          Urban             228.69  36.6  formerly smoked       1  \n1          Rural             105.92  32.5     never smoked       1  \n2          Urban             171.23  34.4           smokes       1  \n3          Rural             174.12  24.0     never smoked       1  \n4          Urban             186.21  29.0  formerly smoked       1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gender</th>\n      <th>age</th>\n      <th>hypertension</th>\n      <th>heart_disease</th>\n      <th>ever_married</th>\n      <th>work_type</th>\n      <th>Residence_type</th>\n      <th>avg_glucose_level</th>\n      <th>bmi</th>\n      <th>smoking_status</th>\n      <th>stroke</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Male</td>\n      <td>67.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Urban</td>\n      <td>228.69</td>\n      <td>36.6</td>\n      <td>formerly smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Male</td>\n      <td>80.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Rural</td>\n      <td>105.92</td>\n      <td>32.5</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Female</td>\n      <td>49.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Urban</td>\n      <td>171.23</td>\n      <td>34.4</td>\n      <td>smokes</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Female</td>\n      <td>79.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Self-employed</td>\n      <td>Rural</td>\n      <td>174.12</td>\n      <td>24.0</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Male</td>\n      <td>81.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Urban</td>\n      <td>186.21</td>\n      <td>29.0</td>\n      <td>formerly smoked</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-17T08:09:34.058194Z","iopub.execute_input":"2024-08-17T08:09:34.058695Z","iopub.status.idle":"2024-08-17T08:09:34.068272Z","shell.execute_reply.started":"2024-08-17T08:09:34.058659Z","shell.execute_reply":"2024-08-17T08:09:34.066540Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"(4981, 11)"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-08-17T08:09:36.193080Z","iopub.execute_input":"2024-08-17T08:09:36.193600Z","iopub.status.idle":"2024-08-17T08:09:36.226441Z","shell.execute_reply.started":"2024-08-17T08:09:36.193562Z","shell.execute_reply":"2024-08-17T08:09:36.224918Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 4981 entries, 0 to 4980\nData columns (total 11 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   gender             4981 non-null   object \n 1   age                4981 non-null   float64\n 2   hypertension       4981 non-null   int64  \n 3   heart_disease      4981 non-null   int64  \n 4   ever_married       4981 non-null   object \n 5   work_type          4981 non-null   object \n 6   Residence_type     4981 non-null   object \n 7   avg_glucose_level  4981 non-null   float64\n 8   bmi                4981 non-null   float64\n 9   smoking_status     4981 non-null   object \n 10  stroke             4981 non-null   int64  \ndtypes: float64(3), int64(3), object(5)\nmemory usage: 428.2+ KB\n","output_type":"stream"}]},{"cell_type":"code","source":"df.describe().T","metadata":{"execution":{"iopub.status.busy":"2024-08-17T08:11:11.640941Z","iopub.execute_input":"2024-08-17T08:11:11.641368Z","iopub.status.idle":"2024-08-17T08:11:11.680591Z","shell.execute_reply.started":"2024-08-17T08:11:11.641338Z","shell.execute_reply":"2024-08-17T08:11:11.679096Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"                    count        mean        std    min    25%    50%     75%  \\\nage                4981.0   43.419859  22.662755   0.08  25.00  45.00   61.00   \nhypertension       4981.0    0.096165   0.294848   0.00   0.00   0.00    0.00   \nheart_disease      4981.0    0.055210   0.228412   0.00   0.00   0.00    0.00   \navg_glucose_level  4981.0  105.943562  45.075373  55.12  77.23  91.85  113.86   \nbmi                4981.0   28.498173   6.790464  14.00  23.70  28.10   32.60   \nstroke             4981.0    0.049789   0.217531   0.00   0.00   0.00    0.00   \n\n                      max  \nage                 82.00  \nhypertension         1.00  \nheart_disease        1.00  \navg_glucose_level  271.74  \nbmi                 48.90  \nstroke               1.00  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>age</th>\n      <td>4981.0</td>\n      <td>43.419859</td>\n      <td>22.662755</td>\n      <td>0.08</td>\n      <td>25.00</td>\n      <td>45.00</td>\n      <td>61.00</td>\n      <td>82.00</td>\n    </tr>\n    <tr>\n      <th>hypertension</th>\n      <td>4981.0</td>\n      <td>0.096165</td>\n      <td>0.294848</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <th>heart_disease</th>\n      <td>4981.0</td>\n      <td>0.055210</td>\n      <td>0.228412</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <th>avg_glucose_level</th>\n      <td>4981.0</td>\n      <td>105.943562</td>\n      <td>45.075373</td>\n      <td>55.12</td>\n      <td>77.23</td>\n      <td>91.85</td>\n      <td>113.86</td>\n      <td>271.74</td>\n    </tr>\n    <tr>\n      <th>bmi</th>\n      <td>4981.0</td>\n      <td>28.498173</td>\n      <td>6.790464</td>\n      <td>14.00</td>\n      <td>23.70</td>\n      <td>28.10</td>\n      <td>32.60</td>\n      <td>48.90</td>\n    </tr>\n    <tr>\n      <th>stroke</th>\n      <td>4981.0</td>\n      <td>0.049789</td>\n      <td>0.217531</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>1.00</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-17T08:09:50.077900Z","iopub.execute_input":"2024-08-17T08:09:50.079236Z","iopub.status.idle":"2024-08-17T08:09:50.093425Z","shell.execute_reply.started":"2024-08-17T08:09:50.079193Z","shell.execute_reply":"2024-08-17T08:09:50.091924Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"gender               0\nage                  0\nhypertension         0\nheart_disease        0\never_married         0\nwork_type            0\nResidence_type       0\navg_glucose_level    0\nbmi                  0\nsmoking_status       0\nstroke               0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df.duplicated().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-17T08:09:55.346255Z","iopub.execute_input":"2024-08-17T08:09:55.346767Z","iopub.status.idle":"2024-08-17T08:09:55.364010Z","shell.execute_reply.started":"2024-08-17T08:09:55.346714Z","shell.execute_reply":"2024-08-17T08:09:55.362330Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}